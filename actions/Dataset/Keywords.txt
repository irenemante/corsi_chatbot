complete online puzzles
brief discussion introducing
computer lab manners
computer lab
give students stack code blocks together
develop sequential algorithms
squirrel character
linear sequence
building lesson develop sequential algorithms
building lesson
students
skill
continue newfound programming skills
tricky course
complicated ways
building lesson
use develop sequential algorithm skills
start using
programming concepts
harvester environment
debugging process squirrel reach
programming puzzles
building lesson
students
skill new get treasure block
students continue learning
open cave spaces
adventurer uses loops
collect treasure looping simple sequences
creating patterns
students learn
draw images
building lesson looping simple sequences
students use loops
students learn
draw images
create patterns use events
play lab
play lab
get creative
coding skills use events
play lab
coding skills
animated game
students stack code blocks together
develop sequential algorithms
turn right
turn left
linear sequence written code
identify errors
existing code
encounter pre
contains mistakes create sequential algorithms
walks along
new character
building lesson
get laurel take control
complete drawings
building lesson
students
skill simple animated underwater scene
building lesson
students
skill
program ended “ free play ” task
write programs
two concepts
sprite lab
programming levels ended “ free play ” task
write programs
user input
timed events
programming levels use sprite lab
interactive virtual pet
use events
project lesson
pet interactive dance party
building lesson
students
skill
program star wars character bb
students using loops
8 efficiently traverse
building lesson
skill project lesson builds
create unique artwork
understanding
students
mini loop inside
building lesson
another loop
students
skill create snowflake images using characters
project lesson takes students
frozen movies
series
mini building lesson gives students
practice concepts
first experience
skill
point functions differently depending
specific conditions
program encounters
building lesson
write code new kind
building lesson
fill holes
dig dirt
holes sneak peek
setting lesson
practice content
well
students main character repeat actions
desired stopping point
building lesson
build programs
students blocks use conditionals
write complex
flexible code
else statements
three building lesson
understand
students
skill
helpful use conditionals
harvest crops
building lesson
students
skill use functions
building lesson
students
skill
artist sprite lab
get practice
building lesson
variables
students lesson also includes
building lesson
use variables
simple game
short mini repetitive designs using variables
variables make code easier
create new designs
free play level
guided puzzles make programs
help illustrate
building lesson
allowing values
variables building lesson focuses
incrementing variable
complicated puzzles
using
solve create complex designs
students practice “
” loops
unique art
complete puzzles project lesson takes students
showcasing new projects
process
developing
designing  complete online puzzles
brief discussion introducing
computer lab manners
computer lab
give students setting lesson brings together teams
practice writing precise instructions
translate instructions
symbols provided
simple task stack code blocks together
develop sequential algorithms
squirrel character
linear sequence
building lesson develop sequential algorithms
building lesson
students
skill
continue newfound programming skills
tricky course
complicated ways
building lesson
use setting lesson revisits happy maps
use loops
solve bigger
longer puzzles
time squirrel reach
programming puzzles
practice loops
building lesson
students students continue learning
open cave spaces
students use loops
collect treasure
building lesson looping simple sequences
creating patterns
students learn
draw images
building lesson setting lesson
press buttons
giant remote
shout
move use events
play lab
play lab
get creative
coding skills students apply
project lesson
sequencing
loops
learned  step carefully around
setting lesson
large grid
students
program stack code blocks together
develop sequential algorithms
linear sequence
building lesson
one side develop sequential algorithms
building lesson
students
skill
continue develop sequential algorithm skills
start using
programming concepts
harvester environment
debugging process easily communicate instructions
use loops
setting lesson
repeated patterns
students harvester collect crops
using loops
building lesson
students
skill students continue learning
open cave spaces
adventurer uses loops
collect treasure
building lesson looping simple sequences
students use loops
students learn
draw images
create patterns “ right app ”
several fictional smartphone users
students empathize
exploratory lesson
needs setting lesson
press buttons
giant remote
shout
move use events
play lab
coding skills
animated game
students students apply
project lesson
play lab
ended project
sequencing  take turns participating
stack cups
setting lesson
different patterns
algorithm defined stack code blocks together
develop sequential algorithms
turn right
turn left
linear sequence written code
identify errors
existing code
encounter pre
contains mistakes create sequential algorithms
walks along
new character
building lesson
get laurel take control
complete drawings
building lesson
students
skill setting lesson builds
robotic friends
featuring larger
complicated designs
initial students using loops
8 efficiently traverse
help bb
building lesson
skill harvester collect multiple veggies growing
students loop new actions
large bunches
building lesson
skill project lesson builds
create unique artwork
previous lessons
understanding
students written algorithm
setting lesson
great way
add flexibility
students building around events
lesson combines skill
flappy bird game
students get
lesson lesson combines skill
building around events
students get
animated game
project using different graphs
play lab project
exploratory lesson
collect data
visualize exploratory lesson introduces
computers today store
sorts
information
concept showcasing new play lab projects
project lesson takes students
developing
designing  students use symbols
students get
setting lesson
one another
graph paper maze puzzles
debugging skills
building lesson
students
skill program one instruction
work together
students break
short lesson
setting lesson simple algorithms
practice reading
practice debugging
fix puzzles
editing code video games
programmers use
different speeds
building lesson
students practice using events
building lesson
students
skill
share interactive dance party
building lesson
students
skill
program quickly introduce students
building lesson
skill
setting
loops building lesson builds
previous lesson
solving practice
extra problem
debugging exercise loop inside
building lesson
another loop
students
skill simple card games
write conditional
setting lesson
students
statements building lesson gives students
practice concepts
first experience
skill
point functions differently depending
specific conditions
program encounters
building lesson
write code new kind
building lesson
fill holes
dig dirt
holes main character repeat actions
desired stopping point
building lesson
build programs
students project lesson takes students
showcasing new projects
process
developing
designing   simple animated underwater scene
building lesson
students
skill
program interactive using events
building lesson
animate sprites
students
skill sharing personal
private information
interactive poster
web
understanding setting lesson shifts
sprite lab
new tool
explore throughout
students create intricate designs using
lesson ends
building lesson
designs
create create snowflake images using characters
project lesson takes students
frozen movies
series
mini help students understand
setting lesson
helpful practice
combining chunks
functions building lesson
understand
students
skill
helpful use functions
building lesson
students
skill
artist sneak peek
setting lesson
practice content
well
students building lesson focuses
programming puzzle
planting crops
new type
skill use conditionals
harvest crops
building lesson
students
skill designing accessible solutions
hypothetical apps
exploratory lesson
value
students exploratory lesson helps students understand
respecting ownership
digital environments
particularly
copyright project lesson takes students
showcasing new projects
process
developing
designing  tools give users choices
also explore apps similar
setting lesson
apps
’ ended “ free play ” task
write programs
two concepts
sprite lab
programming levels ended “ free play ” task
write programs
user input
timed events
programming levels use sprite lab
interactive virtual pet
use events
project lesson
pet mad libs ®)
store input
setting lesson
program runs
computers take sprite lab
get practice
building lesson
variables
students explore sample programs
three open
new skills
ended mini
variables sprite lab
manage groups
go deeper
building lesson
students lesson also includes
building lesson
use variables
simple game
short mini collector game
user moves
sprite around
project lesson
collect objects simulation multiple times
simulation might impact
simple simulation
sprite lab
setting lesson lesson combines skill
building around events
sprite lab
students get
computer simulation machine learning model
exploratory lesson
classifying fish
train
students ip addresses
exploratory lesson
urls
students
pretend project lesson takes students
showcasing new projects
process
developing
designing software engineering mean primary components
java program oriented programming
object method specify alternate outcomes based
current state
painter use inheritance
would new method
write
subclass software engineers obtain feedback
peers instructions based
state
set
repeat
object way selection statements
logical operator improve
two
algorithms debugging tool
used
console new methods
write
program
decide subclasses could
create software engineering
oriented programming
programs
object
learned software engineer
grown represent using programming
\u200b\u200b
want
art program
plans
implement
create software engineer reflected
project
growth free response question
use
objects
know
classes unit topics
students complete
choice assessment
multiple
covers store values
reuse use variables
perform calculations object
decide
attributes specific values
create objects get input
user simplify program code
create hierarchies
classes instance variables
values
object
access instance variables
values
object
object
created easily display information
object variable impact
use
scope
accessibility manage using
want
service
program
business program
plans
implement
create software engineer reflected
project
growth free response question
use
objects
know
classes unit topics
students complete
choice assessment
multiple
covers store multiple related values without creating multiple variables modify elements
one
dimensional
array
1d 1d array
search
elements find specific elements
use arrays would
want
traverse
loop
enhanced define data
class share
objects
change use arrays
different objects
create maximum values
implement algorithms
1d array
plan
minimum 1d array
would
reverse
elements 1d array contained duplicate elements
check whether
would answer using data
want
questions program
plans
implement
create software engineer reflected
project
growth free response question
1d arrays
use
know
answer unit topics
students complete
choice assessment
multiple
covers theater
make two objects
equal
check specific action
test
executing
conditions
combination evaluate multiple conditions
logical operators
used de morgan
laws static method
would
use math class use casting
temporarily convert
nearest integer
different type
value use random numbers
generate specify different outcomes
different conditions want
story
message
data
convey program
plans
implement
create software engineer reflected
project
growth free response question
1d arrays
use
know
conditionals unit topics
students complete
choice assessment
multiple
covers best represented
table
store
need
data please make
students
share
plan
heads access elements
2d array
column 2d array
1d array
reverse
apply
algorithm use enhanced
2d array
traverse
loops create image filters using
theater harmful impacts
programs
beneficial modify standard algorithms
create image filters standard 1d array algorithm
2d array
find duplicates
apply shift
elements
array animation using images
personal experiences
want
portray
interests program
plans
implement
create software engineer reflected
project
growth free response question
standard algorithms
2d arrays
use
know unit topics
students complete
choice assessment
multiple
covers things
requirements
project
need
know represent primitive values
would
want
objects arraylist instead
would
use
array data stored
work
arraylist
able store objects
arraylist removing data
removing data
arraylist different
array analyze parts
string alphabetical order
strings
list
determine apply standard algorithms
strings implement natural language processing techniques
modify standard algorithms use natural language processing techniques
generate text
program
manipulate
analyze program
plans
implement
create software engineer reflected
project
growth free response question
standard algorithms
use
know
arraylists unit topics
students complete
choice assessment
multiple
covers keep track
tasks
project
need
complete passing primitives
object references
similarities
parameters
differences useful
programs
overloading
method method private change
making
functionality override methods
classes intellectual property
algorithmic accountability
balance recursion recursion
iteration
difference implement standard algorithms
used
recursion maximize system reliability
software bugs
impacts result
strategies
issues still need
tasks
project
prioritize
identify use
tasks
received
project
prioritize software engineer reflected
project
growth free response question
standard algorithms
use
know
arraylists unit topics
students complete
choice assessment
multiple
covers keep track
tasks
project
need
complete efficiency
determine
algorithm linear search
binary search
efficient binary search recursively
implement sort elements
data structure insertion sort algorithm compare
selection sort algorithm
efficiency merge sort algorithm compare
insertion sort algorithms
selection
efficiency implement algorithms involving multiple lists sorting algorithms
solve problems
combine searching safeguarding privacy
data collection
utility
tradeoffs
security still need
tasks
project
prioritize
identify use
tasks
received
project
prioritize software engineer reflected
project
growth free response question
standard algorithms
2d arrays
use
know unit topics
students complete
choice assessment
multiple
covers students explore test
ap csa exam
students learn
students identify
taking strategies students complete
choice pre
ap classroom
multiple
assessment study plan
students review
choice pre
results
multiple ap csa exam
students identify
different types
choice questions
type highest priority areas
ap csa exam
study strategies
study plan
students use students complete
frq pre
assessment study plan
students review
frq pre
results
create highest priority areas
ap csa exam
study strategies
study plan
students use students identify strategies
ap csa exam
approaching frqs mock ap csa multiple
students complete
first half
choice exam mock ap csa multiple
students complete
second half
choice exam mcq mock exam
study plans
students review
update
results mock ap csa free response exam
students complete
first half mock ap csa free response exam
students complete
second half frq mock exam
study plans
students review
update
results org csp course web site
“ computer science ” means
“ rapid ” prototype
computer science principles
getting students excited using everyday materials
sixteen possible messages
four possible messages
eight possible messages
students create devices three place values
four place values
creating clear rules
would generate
possible messages base 2 )
transitioning
practice representing numbers
practice converting numbers
helps students convert
base 2 representing fractional amounts using
binary odometer widget
binary number system
students extend
exploring errors ‘ built ’
concepts thus far
send numbers back
representing text using
representing text analog image using small squares
larger square size
white pixelation widget
uniform size
white value analog color image using
pixel uses red
color variants using
bits per pixel
using bits ‘ difficult ’
paying attention
‘ personal best ’ compression
video introduces important vocabulary
‘ easy ’
text compression widget discuss several practical scenarios
lossy text compression widget
lossy image widget
image files using
lossy compression via students watch several videos explaining copyright
analog works become digital artifacts
article answering three questions
current copyright policy
current copyright policies lesson students begin tackling
whether digitizing information
class completed collectively
students place stickies
worse place lesson students finish designing
final two quadrants
class students update
overall claim
harms highlighted multiple choice assessment
unit topics
students complete
covers students take time
use throughout
short transition
representing information
new widget ‘ best ’ way
given several specific networks
best form computer networks
several guidelines
given string scheduling challenge three times
helps students connect
develop shared rules
challenge forces students
students first complete also taking different paths
logs one last time
lets students send messages
updated internet simulator
introducing new vocabulary tcp )
two different protocols
sending messages broken
large messages sent
user datagram protocol
transmission control protocol complete two brief activities
watch videos explaining
provided activity guide
two top
taking notes students begin working
day project exploring
two
society
intersection students finish working
day project exploring
two
society
intersection multiple choice assessment
unit topics
students complete
covers discussing five different apps
finally students return
students watch
students explore
video explaining use design mode
students work
students setting
final level
understanding students brainstorm app ideas
functional app
app lab
user interfaces
make progress app development process outlined
app development guide
user interfaces designs
students continue working
students continue lesson students explore
lego ® pieces
classmate could follow
create text instructions
clearly communicating instructions user actions like buttons clicks
lesson students discuss
students use
small set
simple apps lesson students practice using
lesson students share
different programming concepts
practice throughout
last lesson app using debugging skills
student learn
project apps
previous lesson
pair programming students continue working
students watch
make updates
lesson shifts
groups test final adjustments based
time reviewing
students spend
short set
reflection prompts unit assessment
students complete
class sharing
spend
rest lesson students explore sample apps similar
students adding key vocabulary
students complete
lesson ends
unplugged activity string concatenation pattern ".
temperature displayed changes
next two versions
investigate several versions
lesson students work time practicing using
lesson students spend
lesson students discuss
main things
lesson step approach students make
levels guides students
high level steps
end students submit
using programming patterns computers make decisions using boolean expressions
unplugged activity using
variables explore lesson
students learn
sticky notes guided investigation students first watch
discuss common programming patterns
conditional statements allow programs
new features work
lesson students work time practicing using
lesson students spend
lesson students discuss
main things
lesson museum ticket generator app
step approach students make
levels guides students
high level steps
end students submit considering two ways
example students complete
remove repeated code
lesson students discuss
students begin lesson students discuss remaining questions
lesson students spend
time practicing using
following lesson
make project step approach students make
high level steps
end students submit
using programming patterns
quote maker app project planning guide
planning phase
day project
students work
first day working program
students translate
practice pt
part 1
app lab practice pt progression
decision maker app
students work
final project
final lesson multiple choice assessment
unit topics
students complete
covers guided activity using plastic baggies
students watch two short videos
main activity
main concepts
lesson begins discuss common programming patterns
three apps without seeing
investigate three different apps
students first explore
lesson students work lists including creating lists
removing elements
lists
practice
inserting step approach students make
high level steps
end students submit
using programming patterns
lesson students practicing tracing blocks
activity involves moving
unplugged activity
vocabulary discussion
students begin code investigation students complete another investigation
students practice using
update screen elements
repeatedly run pieces
quick investigation way students develop debugging practices
updating multiple screen elements
loops including using
students practice
loops lock screen maker app
step approach students make
levels guides students
high level steps
end students submit traversal using
traversal machine
students explore
quick review
physical model discuss common programming patterns
three apps without seeing
investigate three different apps
students first explore
lesson students work way students develop debugging practices
students practice traversing lists
data import tools
reducing lists
using step approach students make
high level steps
end students submit
using programming patterns
random forecaster app day unit project
first day
students begin
paper prototype
app around day unit project
second day
students continue
programming constructs
element ids day unit project
third day
students continue
five
build day unit project
fourth day
students continue
five
build individually answering prompts
day unit project
final day
written response
gallery walk multiple choice assessment
unit topics
students complete
covers level appears
final unit
every unit
students complete
students complete two exploratory activities
given six different algorithms
second activity students
first students answer
must analyze lesson students follow
search algorithms
search algorithms
linear search
compare graphs students investigate two different types
way seemingly small problems
many total combinations need
second raffle asks students
first raffle asks students good enough solutions
lesson students watch
unreasonable time algorithm
traveling salesman problem
students explore simple tasks like sorting cards get faster
way human problem solving changes
lesson students record new vocabulary
help tackle new kinds
lesson students watch multiple choice assessment
unit topics
students complete
covers level appears
final unit
every unit
students complete
students physical function envelope
build another function
students work
students create
model functions investigate two different apps
use parameters
students work
return values
partners students practice writing programs
return values
debugging functions
use
parameters unlike typical make projects
rock paper scissors app
given three functions
end students submit
students use students learn
envelope model
building upon
represent
library libraries help programmers simplify
lesson students work
investigate two apps
use libraries
guided discussions students practice important skills
help develop apps
students spend
time programming
level progression day project designing
brainstorm common problems
lesson students begin
common problems
design functions begin developing tests
lesson students exchange
students continue
return values
make sure writing written responses explaining
way one
students complete
library works
library project multiple choice assessment
unit topics
students complete
covers level appears
final unit
every unit
students complete
students help students familiarize
example tasks created
create performance task
lesson contains
use quickly come across
many ways straightforward
directed programming project
inevitably arise
individual components create pt survival guide
help students narrow
providing students
task starting
next lesson students may also work
written responses must
teacher support allowed
evaluate ideas ).
create performance task level appears
final unit
every unit
students complete
students graph ?” site
lesson students explore
data story
data shows
app lab make create two different kinds
build different bar charts
practice making conclusions
bar charts may
make histograms identify issues using
first students learn
answer data questions
students learn
student explore make create two different kinds
provided activity guide
practice making conclusions
practice reading
work using three different topics
different topics
watch videos
lesson concludes
key points first students classify objects
machine learning using
machine learning model
training data set
label new images practice cropping images
reduce bias along
twitter cropping algorithm
cropping algorithm
analyzing twitter data analysis process
data story
students use
students complete
first page data analysis process
data story
students use
students complete
second page multiple choice assessment
unit topics
students complete
covers level appears
final unit
every unit
students complete
students school communities converging
different points throughout
best computing innovation
future school
different stakeholders researching three different computing innovations
team members
innovations
today
focused brief second activity reveals
use every day require
possible information types
lesson students prepare
potential privacy concerns generally think convenience outweighs privacy concerns
many modern computing innovations
class students discuss whether
facial recognition technology
lesson students watch help one another consider potential benefits
ways technology may
proposed innovations may
first students watch
one innovation students create public service announcement slides warning
students investigate three different common security risks
assigned security risk
class coming together
security risks review security risks
security risks
went wrong
lesson begins
kahoot quiz entire class period
work independently
work day
work close
innovation 1 lesson students explore two different encryption widgets
public key encryption
random substitution cipher
caesar cipher widget
students watch knowledge gained throughout
stimulus question
software updates
privacy concerns
multifactor authentication students meet
shared artifact
future school
collective vision
presents group innovation proposal
individual proposals
group presentation
get feedback
following class brief presentation students
group innovation proposal
overall innovation
unified project
students present multiple choice assessment
unit topics
students complete
covers level appears
final unit
every unit
students complete
students work together
solve problems
help us
team
question solve many different types
common steps
use
question
problems problem solving process
many different kinds
question
problems
day question
day
computer computers use input
solve problems
question
output
need different ways computers
process information
question
day important part
computing process
storage
question
day iosp model help us
solves
question
problem
design work together
solve problems
help us
team
question work together
solve problems
help us
team
question work together
solve problems
help us
team
question problem solving process
many different kinds
question
problems
day problem solving process
many different kinds
question
problems
day people create web pages
question
day web page
tell
question
put
organize work together
fix problems
websites
question
day use html
personal value
question
express
day private information stays private
make sure
question
day web page
text
style
question
day web page
personal style
express rules protect everyone
use
rights
question
kind respect everyone
making sure
add images
websites
rights use websites
question
express
day style
question
pages
layouts
images web pages
question
prepare
need
day code web pages
practices help
skills
question
day different reasons people make websites
question
day work together
great team
question
make
day trustworthy information
find relevant
question
internet
day create different styles
type
question
element
day web page
question
plan
group
day combine several different web pages
one website
question
day help us work together
great website
skills
question
practices websites better
use feedback
question
make
day level appears
final unit
every unit
students complete
students computer science used
question
entertainment
day draw something
clearly communicate
screen
question
day draw shapes
screen
question
day
computer use parameters
specific instructions
question
give
day use variables
store information
question
programs
day programs behave differently
time
run
question
make help us keep track
use sprites
question
programs
lots use sprite properties
screen
question
day
change use text
scenes
question
improve
day use game lab
question
express
day
creativity game lab
question
images
day
animate control sprite movement
game lab
question
day combine different programming patterns
complete animation
question
make
day programs react
running
question
day
changes user input
programs react
question
day user input
ways
react
question
day interactive program
skills
question
practices
important programming languages hide complicated patterns
question
program
easier
day programming help make complicated problems
simple
question
day sprite movement
new types
collision detection
used
question make interesting movements
previous blocks
new patterns
question
day programmers build
question
day
create
abstractions new types
modeling movement
used
question
game programmers use functions
question
day
create
abstractions large project easier
plan help
question
make
day problem solving process help programmers
manage large projects
question
day five cs practices
complete large projects
problem solving
help programmers
question level appears
final unit
every unit
students complete
students choose products based
user
question
needs
day make sure
user
question
product
needs question
people
design
day user
question
product
needs
meet make sure
user
test
question
needs use feedback
question
improve
day
app user interviews help us create apps
user
question
needs
meet app prototype
user
question
develop
day want
question
good
day
create use existing apps
apps
question
inspiration
day user interface elements
useful
question
day
app paper prototype
question
day
build
app real users
prototype work
tested
question
day use app lab
design mode
create apps
question
day paper prototype
digital prototype
question
design
day use events
question
day
create
app complete digital prototype
combine screens
question
day
create digital prototype work
real users
tested
question
day address bugs
question
prototype
plan
features make updates
work
track
question
day people outside
design process
team
steps
question level appears
final unit
every unit
students complete
students data affect decisions
make every day
day
question representing information
system
question
day
create represent letters
computers use
words
system
question represent images
computers use
system
question
day represent numbers
computers use
system
question
day computers tell
binary codes
question
numbers
letters keep data secret
question
protect
misuse
day represent complex information using binary systems
question
day use data
solve problems
question
day
community process data
question
make
easier
day data help us make decisions
question
patterns
day data help make
question
patterns
decision
day computers help us make decisions
question
day
data data collected
useful
question
day learn "?
question
machines
day use data
recommendations
question
make
day level appears
final unit
every unit
students complete
students computer looks like
computing form factors
physical computing devices
wider variety
look back combining app lab screens
hypothesizing possible functionalities
students move online
lesson students get
app lab specifically using design mode
create button click events
using onevent blocks
various ui elements
settext () blocks use onboardevent ()
analogously
lesson transitions students
onevent (),
students learn
toggle switches students may need
circuit playground make
circuit playground
refer back
output behaviors citizen science fieldwork
cataloguing endangered species
use app lab
person collects data
wild ). program light patterns
10 color leds
light show
circuit playground
circuit playground use several new design elements
make elements move across
students first practice using
various user interface elements
students later use getproperty students may use dropdowns
students may use
students use variables
complex decisions based
students combine inputs many smart phone apps
students use physical materials
physical environment around
physical device
physical device may interact without actually realizing
users interact
directly interact
write programs
using sensors create multiple programs utilizing
real world applications
likely come across
become familiar
accelerometer similar frequencies might sound good together
forming simple songs
notes allow students
western music
students start group repeated blocks
certain color rather
lesson introduces students
students learn
generalize behaviors app lab screen except
interactive artwork using
augment physical materials
physical materials
physical artwork lesson requires several external materials
attach external leds
world products
use code
students learn lesson requires several external materials
external button events
connect external wires
create input events
wires touch innovative computing device based
unique user interactions
students team
outputs available
final project level appears
final unit
every unit
students complete
students artificial intelligence called machine learning
three machine learning activities
problem solving process
solve problems
lesson students machine learning model without help
create “ mental ” models
“ machine learning ” model
“ unsupervised ” learning
“ supervised ” ai called seeing ai
visual impairments
supporting people
students share
students research examine several apps
ultimately building
machine learning
lesson students
best decision two axes comparing “ sweetness ”
machine learning algorithms computers use
unplugged activity simulating one
graph 20 different fruits
help make decisions use data visualization tools
new customers based
exploring ai lab
ai lab tool
survey data including additional videos
book recommendation app
seen app lab
lesson assumes students
app lab could help uncover bias
view patients based
representing important information
medical priority app
could happen spend time deciding
students also create
first time
would like
students complete model card within app lab
using model cards
students practice importing
help guide users
time including models unplugged activity simulating
numerical data compared
students must predict
zombies using data
categorical data new data visualization tools within ai lab
help find patterns
numerical data
numerical data
every feature code using new design mode elements
new design mode elements
make additional changes
multiple screens instead
driver alert app students conduct research using articles
least one solution
expose ethical pitfalls
ethics ” resource
wide “ machine learning app using real
create accurate machine learning models
simple app lab app
use machine learning
two day project use machine learning
student team came
issue brainstorm using
steps students take
steps students club recommender app based
google form template
students would like
steps students take
steps students students use google sheets
view survey data
steps students take
google sheets
steps students students examine survey data
students develop strategies
skills students
prepare students
collect data club recommender app
steps students take
steps students
students import
students add students prepare
students perform
students follow
students develop
social issue level appears
final unit
every unit
students complete
students artificial intelligence called machine learning
three machine learning activities
problem solving process
solve problems
lesson students machine learning model without help
create “ mental ” models
“ machine learning ” model
“ unsupervised ” learning
“ supervised ” ai called seeing ai
visual impairments
supporting people
students share
students research examine several apps
ultimately building
machine learning
lesson students
best decision two axes comparing “ sweetness ”
machine learning algorithms computers use
unplugged activity simulating one
graph 20 different fruits
help make decisions use data visualization tools
new customers based
exploring ai lab
ai lab tool
survey data including additional videos
book recommendation app
seen app lab
lesson assumes students
app lab could help uncover bias
view patients based
representing important information
medical priority app
could happen spend time deciding
students also create
first time
would like
students complete model card within app lab
using model cards
students practice importing
help guide users
time including models unplugged activity simulating
numerical data compared
students must predict
zombies using data
categorical data new data visualization tools within ai lab
help find patterns
numerical data
numerical data
every feature code using new design mode elements
new design mode elements
make additional changes
multiple screens instead
driver alert app students conduct research using articles
least one solution
expose ethical pitfalls
ethics ” resource
wide “ machine learning app using real
create accurate machine learning models
simple app lab app
use machine learning
two day mini use machine learning
student team came
issue brainstorm using
steps students take
steps students club recommender app based
google form template
students would like
steps students take
steps students students use google sheets
view survey data
steps students take
google sheets
steps students students examine survey data
students develop strategies
skills students
prepare students
collect data club recommender app
steps students take
steps students
students import
students add friendly app based
sample app
app ”.
app lab
ai app 